{
  "haier.climate": {
    "schemas": {
      "BASE_CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "climate.CLIMATE_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "supported_modes": {
              "key": "Optional",
              "is_list": true,
              "type": "enum",
              "values": {
                "OFF": null,
                "HEAT_COOL": null,
                "COOL": null,
                "HEAT": null,
                "DRY": null,
                "FAN_ONLY": null
              }
            },
            "supported_swing_modes": {
              "key": "Optional",
              "default": "['OFF', 'VERTICAL', 'HORIZONTAL', 'BOTH']",
              "is_list": true,
              "type": "enum",
              "values": {
                "OFF": null,
                "VERTICAL": null,
                "HORIZONTAL": null,
                "BOTH": null
              }
            },
            "wifi_signal": {
              "key": "Optional",
              "default": "False",
              "type": "boolean"
            },
            "display": {
              "key": "Optional",
              "type": "boolean"
            },
            "answer_timeout": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              }
            },
            "uart_id": {
              "key": "GeneratedID",
              "use_id_type": "uart::UARTComponent",
              "type": "use_id"
            }
          }
        }
      },
      "CONFIG_SCHEMA": {
        "type": "typed",
        "types": {
          "SMARTAIR2": {
            "extends": [
              "haier.climate.BASE_CONFIG_SCHEMA"
            ],
            "config_vars": {
              "id": {
                "key": "GeneratedID",
                "id_type": {
                  "class": "haier::Smartair2Climate",
                  "parents": [
                    "haier::HaierClimateBase",
                    "uart::UARTDevice",
                    "climate::Climate",
                    "EntityBase",
                    "Component"
                  ]
                },
                "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation.\n\n*See also: [Haier Climate](https://esphome.io/components/climate/haier.html#configuration-variables)*"
              },
              "supported_presets": {
                "key": "Optional",
                "default": "['BOOST', 'COMFORT']",
                "is_list": true,
                "type": "enum",
                "values": {
                  "BOOST": null,
                  "COMFORT": null
                },
                "docs": "**list**: Can be used to disable some presets. Possible values for smartair2 are: BOOST, COMFORT. Possible values for hOn are: ECO, BOOST, SLEEP\n\n*See also: [Haier Climate](https://esphome.io/components/climate/haier.html#configuration-variables)*"
              }
            }
          },
          "HON": {
            "extends": [
              "haier.climate.BASE_CONFIG_SCHEMA"
            ],
            "config_vars": {
              "id": {
                "key": "GeneratedID",
                "id_type": {
                  "class": "haier::HonClimate",
                  "parents": [
                    "haier::HaierClimateBase",
                    "uart::UARTDevice",
                    "climate::Climate",
                    "EntityBase",
                    "Component"
                  ]
                },
                "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation.\n\n*See also: [Haier Climate](https://esphome.io/components/climate/haier.html#configuration-variables)*"
              },
              "beeper": {
                "key": "Optional",
                "default": "True",
                "type": "boolean",
                "docs": "**boolean**: Can be used to disable beeping on commands from AC. Supported only by hOn protocol.\n\n*See also: [Haier Climate](https://esphome.io/components/climate/haier.html#configuration-variables)*"
              },
              "supported_presets": {
                "key": "Optional",
                "default": "['ECO', 'BOOST', 'SLEEP']",
                "is_list": true,
                "type": "enum",
                "values": {
                  "ECO": null,
                  "BOOST": null,
                  "SLEEP": null
                },
                "docs": "**list**: Can be used to disable some presets. Possible values for smartair2 are: BOOST, COMFORT. Possible values for hOn are: ECO, BOOST, SLEEP\n\n*See also: [Haier Climate](https://esphome.io/components/climate/haier.html#configuration-variables)*"
              },
              "outdoor_temperature": {
                "key": "Optional",
                "type": "schema",
                "schema": {
                  "extends": [
                    "sensor.SENSOR_SCHEMA"
                  ],
                  "config_vars": {
                    "unit_of_measurement": {
                      "default": "\u00b0C"
                    },
                    "icon": {
                      "default": "mdi:thermometer"
                    },
                    "accuracy_decimals": {
                      "default": "0"
                    },
                    "device_class": {
                      "default": "temperature"
                    },
                    "state_class": {
                      "default": "measurement"
                    }
                  }
                },
                "docs": "Temperature sensor for outdoor temperature. Supported only by hOn protocol.\n  * **name** (**Required**, string): The name of the sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): ID of the sensor, can be used for code generation\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [Haier Climate](https://esphome.io/components/climate/haier.html#configuration-variables)*"
              }
            }
          }
        },
        "typed_key": "protocol",
        "docs": "**string**: Defines protocol of communication with AC. Possible values: hon or smartair2. Default value is smartair2.\n\n*See also: [Haier Climate](https://esphome.io/components/climate/haier.html#configuration-variables)*"
      },
      "HAIER_BASE_ACTION_SCHEMA": {
        "type": "schema",
        "maybe": "id",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "haier::HaierClimateBase",
              "type": "use_id"
            }
          }
        }
      },
      "HAIER_HON_BASE_ACTION_SCHEMA": {
        "type": "schema",
        "maybe": "id",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "haier::HonClimate",
              "type": "use_id"
            }
          }
        }
      }
    },
    "action": {
      "display_off": {
        "type": "schema",
        "schema": {
          "extends": [
            "haier.climate.HAIER_BASE_ACTION_SCHEMA"
          ]
        },
        "docs": "This action turns the AC display off\n\n*See also: [climate.haier.display_off Action](https://esphome.io/components/climate/haier.html#climate-haier-display-off-action)*"
      },
      "display_on": {
        "type": "schema",
        "schema": {
          "extends": [
            "haier.climate.HAIER_BASE_ACTION_SCHEMA"
          ]
        },
        "docs": "This action turns the AC display on\n\n*See also: [climate.haier.display_on Action](https://esphome.io/components/climate/haier.html#climate-haier-display-on-action)*"
      },
      "beeper_off": {
        "type": "schema",
        "schema": {
          "extends": [
            "haier.climate.HAIER_HON_BASE_ACTION_SCHEMA"
          ]
        },
        "docs": "(supported only by hOn) This action disables beep feedback on every command sent to AC (keep in mind that this will not work for IR remote commands)\n\n*See also: [climate.haier.beeper_off Action](https://esphome.io/components/climate/haier.html#climate-haier-beeper-off-action)*"
      },
      "beeper_on": {
        "type": "schema",
        "schema": {
          "extends": [
            "haier.climate.HAIER_HON_BASE_ACTION_SCHEMA"
          ]
        },
        "docs": "(supported only by hOn) This action enables beep feedback on every command sent to AC\n\n*See also: [climate.haier.beeper_on Action](https://esphome.io/components/climate/haier.html#climate-haier-beeper-on-action)*"
      },
      "start_steri_cleaning": {
        "type": "schema",
        "schema": {
          "extends": [
            "haier.climate.HAIER_HON_BASE_ACTION_SCHEMA"
          ]
        },
        "docs": "(supported only by hOn) Start 56\u00b0C steri-cleaning\n\n*See also: [climate.haier.start_steri_cleaning Action](https://esphome.io/components/climate/haier.html#climate-haier-start-steri-cleaning-action)*"
      },
      "start_self_cleaning": {
        "type": "schema",
        "schema": {
          "extends": [
            "haier.climate.HAIER_HON_BASE_ACTION_SCHEMA"
          ]
        },
        "docs": "(supported only by hOn) Start [self-cleaning](https://www.haier.com/in/blogs/beat-the-summer-heat-with-haier-self-cleaning-ac.shtml)\n\n*See also: [climate.haier.start_self_cleaning Action](https://esphome.io/components/climate/haier.html#climate-haier-start-self-cleaning-action)*"
      },
      "set_vertical_airflow": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "haier::HonClimate",
              "type": "use_id"
            },
            "vertical_airflow": {
              "key": "Required",
              "templatable": true,
              "type": "enum",
              "values": {
                "HEALTH_UP": null,
                "MAX_UP": null,
                "UP": null,
                "CENTER": null,
                "DOWN": null,
                "HEALTH_DOWN": null
              }
            }
          }
        },
        "docs": "(supported only by hOn) Set direction for vertical airflow if the vertical swing is disabled. Possible values: Health_Up, Max_Up, Up, Center, Down, Health_Down.\n\n*See also: [climate.haier.set_vertical_airflow Action](https://esphome.io/components/climate/haier.html#climate-haier-set-vertical-airflow-action)*"
      },
      "set_horizontal_airflow": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "haier::HonClimate",
              "type": "use_id"
            },
            "horizontal_airflow": {
              "key": "Required",
              "templatable": true,
              "type": "enum",
              "values": {
                "MAX_LEFT": null,
                "LEFT": null,
                "CENTER": null,
                "RIGHT": null,
                "MAX_RIGHT": null
              }
            }
          }
        },
        "docs": "(supported only by hOn) Set direction for horizontal airflow if the horizontal swing is disabled. Possible values: Max_Left, Left, Center, Right, Max_Right.\n\n*See also: [climate.haier.set_horizontal_airflow Action](https://esphome.io/components/climate/haier.html#climate-haier-set-horizontal-airflow-action)*"
      },
      "health_off": {
        "type": "schema",
        "schema": {
          "extends": [
            "haier.climate.HAIER_BASE_ACTION_SCHEMA"
          ]
        },
        "docs": "Turn off health mode\n\n*See also: [climate.haier.health_off Action](https://esphome.io/components/climate/haier.html#climate-haier-health-off-action)*"
      },
      "health_on": {
        "type": "schema",
        "schema": {
          "extends": [
            "haier.climate.HAIER_BASE_ACTION_SCHEMA"
          ]
        },
        "docs": "Turn on health mode ([UV light sterilization](https://www.haierhvac.eu/en/node/1809))\n\n*See also: [climate.haier.health_on Action](https://esphome.io/components/climate/haier.html#climate-haier-health-on-action)*"
      },
      "power_toggle": {
        "type": "schema",
        "schema": {
          "extends": [
            "haier.climate.HAIER_BASE_ACTION_SCHEMA"
          ]
        },
        "docs": "This action toggles AC power\n\n*See also: [climate.haier.power_toggle Action](https://esphome.io/components/climate/haier.html#climate-haier-power-toggle-action)*"
      },
      "power_off": {
        "type": "schema",
        "schema": {
          "extends": [
            "haier.climate.HAIER_BASE_ACTION_SCHEMA"
          ]
        },
        "docs": "This action turns AC power off\n\n*See also: [climate.haier.power_off Action](https://esphome.io/components/climate/haier.html#climate-haier-power-off-action)*"
      },
      "power_on": {
        "type": "schema",
        "schema": {
          "extends": [
            "haier.climate.HAIER_BASE_ACTION_SCHEMA"
          ]
        },
        "docs": "This action turns AC power on.\n\n*See also: [climate.haier.power_on Action](https://esphome.io/components/climate/haier.html#climate-haier-power-on-action)*"
      }
    }
  }
}