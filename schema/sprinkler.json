{
  "sprinkler": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "is_list": true,
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "sprinkler::Sprinkler",
                "parents": [
                  "Component"
                ]
              },
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation. While optional, this is necessary to identify the controller instance (particularly in cases where more than one is defined) when calling controller actions (see below) such as `start_full_cycle` or `shutdown`.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "name": {
              "key": "Optional",
              "type": "string"
            },
            "auto_advance_switch": {
              "key": "Optional",
              "type": "schema",
              "maybe": "name",
              "schema": {
                "extends": [
                  "switch._SWITCH_SCHEMA"
                ],
                "config_vars": {
                  "restore_mode": {
                    "key": "Optional",
                    "default": "RESTORE_DEFAULT_OFF",
                    "type": "enum",
                    "values": {
                      "RESTORE_DEFAULT_OFF": null,
                      "RESTORE_DEFAULT_ON": null,
                      "ALWAYS_OFF": null,
                      "ALWAYS_ON": null,
                      "RESTORE_INVERTED_DEFAULT_OFF": null,
                      "RESTORE_INVERTED_DEFAULT_ON": null,
                      "DISABLED": null
                    }
                  },
                  "id": {
                    "key": "GeneratedID",
                    "id_type": {
                      "class": "sprinkler::SprinklerControllerSwitch",
                      "parents": [
                        "switch_::Switch",
                        "EntityBase",
                        "Component"
                      ]
                    }
                  },
                  "entity_category": {
                    "default": "config"
                  }
                }
              },
              "docs": "***string***: Required with more than one valve. The name for the sprinkler controller\u2019s \u201cauto-advance\u201d switch as it will appear in the front end. When this switch is turned on while a valve is active, when the valve\u2019s `run_duration` is reached, the sprinkler controller will automatically advance to the next enabled valve as a part of a \u201cfull cycle\u201d of the system. When turned off, the sprinkler controller will shut down after the active valve\u2019s `run_duration` is reached (unless there are valves in the queue \u2013 see [The Sprinkler Controller Queue](https://esphome.io/components/sprinkler.html#sprinkler-controller-sprinkler-controller-queue) section below for more detail). This switch will not appear in the front end if the controller is configured with only one valve.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "main_switch": {
              "key": "Optional",
              "type": "schema",
              "maybe": "name",
              "schema": {
                "extends": [
                  "switch._SWITCH_SCHEMA"
                ],
                "config_vars": {
                  "restore_mode": {
                    "key": "Optional",
                    "default": "ALWAYS_OFF",
                    "type": "enum",
                    "values": {
                      "RESTORE_DEFAULT_OFF": null,
                      "RESTORE_DEFAULT_ON": null,
                      "ALWAYS_OFF": null,
                      "ALWAYS_ON": null,
                      "RESTORE_INVERTED_DEFAULT_OFF": null,
                      "RESTORE_INVERTED_DEFAULT_ON": null,
                      "DISABLED": null
                    }
                  },
                  "id": {
                    "key": "GeneratedID",
                    "id_type": {
                      "class": "sprinkler::SprinklerControllerSwitch",
                      "parents": [
                        "switch_::Switch",
                        "EntityBase",
                        "Component"
                      ]
                    }
                  }
                }
              },
              "docs": "***string***: Required with more than one valve. The name for the sprinkler controller\u2019s main switch as it will appear in the front end. This switch, when turned on, calls the `sprinkler.resume_or_start_full_cycle` action; when turned off, it calls the `sprinkler.shutdown` action (see below). It will appear to be \u201con\u201d when any valve on the controller is active. This switch will not appear in the front end if the controller is configured with only one valve.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "queue_enable_switch": {
              "key": "Optional",
              "type": "schema",
              "maybe": "name",
              "schema": {
                "extends": [
                  "switch._SWITCH_SCHEMA"
                ],
                "config_vars": {
                  "restore_mode": {
                    "key": "Optional",
                    "default": "RESTORE_DEFAULT_OFF",
                    "type": "enum",
                    "values": {
                      "RESTORE_DEFAULT_OFF": null,
                      "RESTORE_DEFAULT_ON": null,
                      "ALWAYS_OFF": null,
                      "ALWAYS_ON": null,
                      "RESTORE_INVERTED_DEFAULT_OFF": null,
                      "RESTORE_INVERTED_DEFAULT_ON": null,
                      "DISABLED": null
                    }
                  },
                  "id": {
                    "key": "GeneratedID",
                    "id_type": {
                      "class": "sprinkler::SprinklerControllerSwitch",
                      "parents": [
                        "switch_::Switch",
                        "EntityBase",
                        "Component"
                      ]
                    }
                  },
                  "entity_category": {
                    "default": "config"
                  }
                }
              },
              "docs": "***string***: The name for the sprinkler controller\u2019s queue enable switch as it will appear in the front end. When this switch is turned on or not provided, the controller will select the next valve/zone to run based on the contents of the queue; the queue takes precedence over valves that would otherwise run as a part of a full cycle of the system (when auto-advance is on/enabled). See [The Sprinkler Controller Queue](https://esphome.io/components/sprinkler.html#sprinkler-controller-sprinkler-controller-queue) section below for more detail.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "reverse_switch": {
              "key": "Optional",
              "type": "schema",
              "maybe": "name",
              "schema": {
                "extends": [
                  "switch._SWITCH_SCHEMA"
                ],
                "config_vars": {
                  "restore_mode": {
                    "key": "Optional",
                    "default": "RESTORE_DEFAULT_OFF",
                    "type": "enum",
                    "values": {
                      "RESTORE_DEFAULT_OFF": null,
                      "RESTORE_DEFAULT_ON": null,
                      "ALWAYS_OFF": null,
                      "ALWAYS_ON": null,
                      "RESTORE_INVERTED_DEFAULT_OFF": null,
                      "RESTORE_INVERTED_DEFAULT_ON": null,
                      "DISABLED": null
                    }
                  },
                  "id": {
                    "key": "GeneratedID",
                    "id_type": {
                      "class": "sprinkler::SprinklerControllerSwitch",
                      "parents": [
                        "switch_::Switch",
                        "EntityBase",
                        "Component"
                      ]
                    }
                  },
                  "entity_category": {
                    "default": "config"
                  }
                }
              },
              "docs": "***string***: The name for the sprinkler controller\u2019s reverse switch as it will appear in the front end. When this switch is turned on, the controller will iterate through the valves in reverse order (last-to-first as they appear in the controller\u2019s configuration). When this switch is turned off or not provided, the controller will iterate through the valves first-to-last. This switch will not appear in the front end if the controller is configured with only one valve.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "standby_switch": {
              "key": "Optional",
              "type": "schema",
              "maybe": "name",
              "schema": {
                "extends": [
                  "switch._SWITCH_SCHEMA"
                ],
                "config_vars": {
                  "restore_mode": {
                    "key": "Optional",
                    "default": "RESTORE_DEFAULT_OFF",
                    "type": "enum",
                    "values": {
                      "RESTORE_DEFAULT_OFF": null,
                      "RESTORE_DEFAULT_ON": null,
                      "ALWAYS_OFF": null,
                      "ALWAYS_ON": null,
                      "RESTORE_INVERTED_DEFAULT_OFF": null,
                      "RESTORE_INVERTED_DEFAULT_ON": null,
                      "DISABLED": null
                    }
                  },
                  "id": {
                    "key": "GeneratedID",
                    "id_type": {
                      "class": "sprinkler::SprinklerControllerSwitch",
                      "parents": [
                        "switch_::Switch",
                        "EntityBase",
                        "Component"
                      ]
                    }
                  },
                  "entity_category": {
                    "default": "config"
                  }
                }
              },
              "docs": "***string***: The name for the sprinkler controller\u2019s standby switch as it will appear in the front end. When this switch is turned on, the controller *will not start any valves.* **This can result in confusing/unexpected behavior if there is no visual indication of this condition!**\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "next_prev_ignore_disabled": {
              "key": "Optional",
              "default": "False",
              "type": "boolean",
              "docs": "**boolean**: Set to `true` to cause [sprinkler.next_valve action](https://esphome.io/components/sprinkler.html#sprinkler-controller-action-next-valve) and [sprinkler.previous_valve action](https://esphome.io/components/sprinkler.html#sprinkler-controller-action-previous-valve) to skip over valves that are not enabled. Defaults to `false`.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "manual_selection_delay": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_seconds"
                ]
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The amount of time the controller should wait to activate a valve after the `next_valve` and `previous_valve` actions are called. Useful if the control interface consists of only forward/reverse buttons as the button(s) may be pressed multiple times to make the selection.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "multiplier_number": {
              "key": "Optional",
              "type": "schema",
              "maybe": "name",
              "schema": {
                "extends": [
                  "number.NUMBER_SCHEMA",
                  "core.COMPONENT_SCHEMA"
                ],
                "config_vars": {
                  "id": {
                    "key": "GeneratedID",
                    "id_type": {
                      "class": "sprinkler::SprinklerControllerNumber",
                      "parents": [
                        "number::Number",
                        "EntityBase",
                        "Component"
                      ]
                    }
                  },
                  "entity_category": {
                    "default": "config"
                  },
                  "initial_value": {
                    "key": "Optional",
                    "default": "1",
                    "data_type": "positive_float"
                  },
                  "max_value": {
                    "key": "Optional",
                    "default": "10",
                    "data_type": "positive_float"
                  },
                  "min_value": {
                    "key": "Optional",
                    "default": "0",
                    "data_type": "positive_float"
                  },
                  "restore_value": {
                    "key": "Optional",
                    "default": "True",
                    "type": "boolean"
                  },
                  "step": {
                    "key": "Optional",
                    "default": "0.1",
                    "data_type": "positive_float"
                  },
                  "set_action": {
                    "key": "Optional",
                    "type": "trigger"
                  }
                }
              },
              "docs": "***string***: The name of the [number](https://esphome.io/components/number/index.html) component that should be presented to the front end (Home Assistant) to enable control of the sprinkler controller\u2019s `multiplier` value. See [Using the Sprinkler Controller\u2019s Numbers](https://esphome.io/components/sprinkler.html#sprinkler-controller-sprinkler-controller-numbers) below for more detail.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "repeat": {
              "key": "Optional",
              "type": "integer",
              "data_type": "positive_int",
              "docs": "**int**: The number of times a full cycle should be repeated. Defaults to 0. May not be used with `repeat_number`.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "repeat_number": {
              "key": "Optional",
              "type": "schema",
              "maybe": "name",
              "schema": {
                "extends": [
                  "number.NUMBER_SCHEMA",
                  "core.COMPONENT_SCHEMA"
                ],
                "config_vars": {
                  "id": {
                    "key": "GeneratedID",
                    "id_type": {
                      "class": "sprinkler::SprinklerControllerNumber",
                      "parents": [
                        "number::Number",
                        "EntityBase",
                        "Component"
                      ]
                    }
                  },
                  "entity_category": {
                    "default": "config"
                  },
                  "initial_value": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer",
                    "data_type": "positive_int"
                  },
                  "max_value": {
                    "key": "Optional",
                    "default": "10",
                    "type": "integer",
                    "data_type": "positive_int"
                  },
                  "min_value": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer",
                    "data_type": "positive_int"
                  },
                  "restore_value": {
                    "key": "Optional",
                    "default": "True",
                    "type": "boolean"
                  },
                  "step": {
                    "key": "Optional",
                    "default": "1",
                    "type": "integer",
                    "data_type": "positive_int"
                  },
                  "set_action": {
                    "key": "Optional",
                    "type": "trigger"
                  }
                }
              },
              "docs": "***string***: The name of the [number](https://esphome.io/components/number/index.html) component that should be presented to the front end (Home Assistant) to enable control of the sprinkler controller\u2019s `repeat` value. May not be used with `repeat`. See [Using the Sprinkler Controller\u2019s Numbers](https://esphome.io/components/sprinkler.html#sprinkler-controller-sprinkler-controller-numbers) below for more detail.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "pump_pulse_duration": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The *minimum* length of the pulse generated to operate a pump in milliseconds. *Required* when one or more latching pumps is configured. Note that the *exact* length of the pulse is determined by the frequency of the main application loop (as are other `delay` timers used in ESPHome). Typically this is expected to provide a resolution of approximately 16 milliseconds, however this may vary somewhat depending on your exact configuration. Regardless, it should provide more-than-sufficient precision to operate any such valve.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "valve_pulse_duration": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The *minimum* length of the pulse generated to operate a valve in milliseconds. *Required* when one or more latching valves is configured. Note that the *exact* length of the pulse is determined by the frequency of the main application loop (as are other `delay` timers used in ESPHome). Typically this is expected to provide a resolution of approximately 16 milliseconds, however this may vary somewhat depending on your exact configuration. Regardless, it should provide more-than-sufficient precision to operate any such valve.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "pump_start_pump_delay": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_seconds"
                ]
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The delay in seconds from when a distribution valve is opened to when the associated pump is activated. Useful to ensure pressure does not build up from running the pump when no distribution valves are open. May not be used with `pump_start_valve_delay`.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "pump_stop_pump_delay": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_seconds"
                ]
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The delay in seconds from when a distribution valve is closed to when the respective pump is deactivated. Useful for systems where distribution valves require sufficient pressure to fully/quickly close. May not be used with `pump_stop_valve_delay`.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "pump_switch_off_during_valve_open_delay": {
              "key": "Optional",
              "type": "boolean",
              "docs": "**boolean**: If set to `true`, the pump will be switched off during the `valve_open_delay` interval; otherwise, it remains on. This may only be specified when `valve_open_delay` is configured (see above). Defaults to `false`.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "pump_start_valve_delay": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_seconds"
                ]
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The delay in seconds from when a pump is started to when the associated distribution valve is opened. Useful for systems where distribution valves require sufficient pressure to fully/quickly close. May not be used with `pump_start_pump_delay`.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "pump_stop_valve_delay": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_seconds"
                ]
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The delay in seconds from when a pump is deactivated to when the respective distribution valve is closed. Useful to ensure pressure does not build up from running the pump when no distribution valves are open or to allow the main line out to distribution valves to drain. May not be used with `pump_stop_pump_delay`.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "valve_overlap": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_seconds"
                ]
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The amount of time in seconds that the current valve and the next valve should run simultaneously as the next valve/zone starts up. This may help prevent pipes from banging as valves close. May not be used with `valve_open_delay`.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "valve_open_delay": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_seconds"
                ]
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The *minimum* delay in seconds that should be inserted between (distribution) valve switching \u2013 in other words, the amount of time that must elapse between one valve switching off and the next one switching on. Useful for systems with valves which depend on sufficient water pressure to close. May not be used with `valve_overlap`.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            },
            "valves": {
              "key": "Required",
              "is_list": true,
              "type": "schema",
              "schema": {
                "config_vars": {
                  "enable_switch": {
                    "key": "Optional",
                    "type": "schema",
                    "maybe": "name",
                    "schema": {
                      "extends": [
                        "switch._SWITCH_SCHEMA"
                      ],
                      "config_vars": {
                        "restore_mode": {
                          "key": "Optional",
                          "default": "RESTORE_DEFAULT_OFF",
                          "type": "enum",
                          "values": {
                            "RESTORE_DEFAULT_OFF": null,
                            "RESTORE_DEFAULT_ON": null,
                            "ALWAYS_OFF": null,
                            "ALWAYS_ON": null,
                            "RESTORE_INVERTED_DEFAULT_OFF": null,
                            "RESTORE_INVERTED_DEFAULT_ON": null,
                            "DISABLED": null
                          }
                        },
                        "id": {
                          "key": "GeneratedID",
                          "id_type": {
                            "class": "sprinkler::SprinklerControllerSwitch",
                            "parents": [
                              "switch_::Switch",
                              "EntityBase",
                              "Component"
                            ]
                          }
                        },
                        "entity_category": {
                          "default": "config"
                        }
                      }
                    },
                    "docs": "***string***: The name for the switch component to be used to enable this valve to be run as a part of a full cycle of the system. When this switch is turned off, the valve will be excluded from a full cycle of the system. When this switch is turned on or not provided, the controller will include the valve in a full cycle of the system.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
                  },
                  "pump_off_switch_id": {
                    "key": "Optional",
                    "use_id_type": "switch_::Switch",
                    "type": "use_id",
                    "docs": "**[Switch](https://esphome.io/components/switch/index.html#config-switch)**: This is the [switch](https://esphome.io/components/switch/index.html#config-switch) component to be used to *turn off* the valve\u2019s pump or upstream electric *latching* valve. Typically this would be a [GPIO switch](https://esphome.io/components/switch/gpio.html) wired to control a relay or other switching device which in turn would *switch off* the respective pump/valve. *It is not recommended to expose this switch to the front end; please see* [An Important Note about GPIO Switches and Control](https://esphome.io/components/sprinkler.html#sprinkler-controller-an-important-note-about-gpio-switches-and-control) *below for more detail.* May not be specified with *pump_switch_id*.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
                  },
                  "pump_on_switch_id": {
                    "key": "Optional",
                    "use_id_type": "switch_::Switch",
                    "type": "use_id",
                    "docs": "**[Switch](https://esphome.io/components/switch/index.html#config-switch)**: This is the [switch](https://esphome.io/components/switch/index.html#config-switch) component to be used to *turn on* the valve\u2019s pump or upstream electric *latching* valve. Typically this would be a [GPIO switch](https://esphome.io/components/switch/gpio.html) wired to control a relay or other switching device which in turn would *switch on* the respective pump/valve. *It is not recommended to expose this switch to the front end; please see* [An Important Note about GPIO Switches and Control](https://esphome.io/components/sprinkler.html#sprinkler-controller-an-important-note-about-gpio-switches-and-control) *below for more detail.* May not be specified with *pump_switch_id*.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
                  },
                  "pump_switch_id": {
                    "key": "Optional",
                    "use_id_type": "switch_::Switch",
                    "type": "use_id",
                    "docs": "**[Switch](https://esphome.io/components/switch/index.html#config-switch)**: This is the [switch](https://esphome.io/components/switch/index.html#config-switch) component to be used to control the valve\u2019s pump or upstream electric valve. Typically this would be a [GPIO switch](https://esphome.io/components/switch/gpio.html) wired to control a relay or other switching device which in turn would activate the respective pump/valve. *It is not recommended to expose this switch to the front end; please see* [An Important Note about GPIO Switches and Control](https://esphome.io/components/sprinkler.html#sprinkler-controller-an-important-note-about-gpio-switches-and-control) *below for more detail.* May not be specified with *pump_off_switch_id* or *pump_on_switch_id*.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
                  },
                  "run_duration": {
                    "key": "Optional",
                    "type": "schema",
                    "schema": {
                      "extends": [
                        "core.positive_time_period_seconds"
                      ]
                    },
                    "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: Required when `run_duration_number` is not provided. The duration in seconds this valve should remain on/open after it is activated. When a given valve is activated, the controller\u2019s multiplier value is multiplied by this value to determine the actual run duration for the valve, thus allowing the run duration for all valves/zones to be proportionally increased or decreased as desired. May not be used with `run_duration_number`.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
                  },
                  "run_duration_number": {
                    "key": "Optional",
                    "type": "schema",
                    "maybe": "name",
                    "schema": {
                      "extends": [
                        "number.NUMBER_SCHEMA",
                        "core.COMPONENT_SCHEMA"
                      ],
                      "config_vars": {
                        "id": {
                          "key": "GeneratedID",
                          "id_type": {
                            "class": "sprinkler::SprinklerControllerNumber",
                            "parents": [
                              "number::Number",
                              "EntityBase",
                              "Component"
                            ]
                          }
                        },
                        "entity_category": {
                          "default": "config"
                        },
                        "initial_value": {
                          "key": "Optional",
                          "default": "900",
                          "type": "integer",
                          "data_type": "positive_int"
                        },
                        "max_value": {
                          "key": "Optional",
                          "default": "86400",
                          "type": "integer",
                          "data_type": "positive_int"
                        },
                        "min_value": {
                          "key": "Optional",
                          "default": "1",
                          "type": "integer",
                          "data_type": "positive_int"
                        },
                        "restore_value": {
                          "key": "Optional",
                          "default": "True",
                          "type": "boolean"
                        },
                        "step": {
                          "key": "Optional",
                          "default": "1",
                          "type": "integer",
                          "data_type": "positive_int"
                        },
                        "set_action": {
                          "key": "Optional",
                          "type": "trigger"
                        },
                        "unit_of_measurement": {
                          "default": "s",
                          "type": "enum",
                          "values": {
                            "min": null,
                            "s": null
                          }
                        }
                      }
                    },
                    "docs": "***string***: The name of the [number](https://esphome.io/components/number/index.html) component that should be presented to the front end (Home Assistant) to enable control of the valve\u2019s `run_duration` value. May not be used with `run_duration`. See [Using the Sprinkler Controller\u2019s Numbers](https://esphome.io/components/sprinkler.html#sprinkler-controller-sprinkler-controller-numbers) below for more detail. **Pro tip:** Want times in minutes? Add `unit_of_measurement: min` to the number configuration. See [Using the Sprinkler Controller\u2019s Numbers](https://esphome.io/components/sprinkler.html#sprinkler-controller-sprinkler-controller-numbers) for more detail.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
                  },
                  "valve_switch": {
                    "key": "Required",
                    "type": "schema",
                    "maybe": "name",
                    "schema": {
                      "extends": [
                        "switch._SWITCH_SCHEMA"
                      ],
                      "config_vars": {
                        "restore_mode": {
                          "key": "Optional",
                          "default": "ALWAYS_OFF",
                          "type": "enum",
                          "values": {
                            "RESTORE_DEFAULT_OFF": null,
                            "RESTORE_DEFAULT_ON": null,
                            "ALWAYS_OFF": null,
                            "ALWAYS_ON": null,
                            "RESTORE_INVERTED_DEFAULT_OFF": null,
                            "RESTORE_INVERTED_DEFAULT_ON": null,
                            "DISABLED": null
                          }
                        },
                        "id": {
                          "key": "GeneratedID",
                          "id_type": {
                            "class": "sprinkler::SprinklerControllerSwitch",
                            "parents": [
                              "switch_::Switch",
                              "EntityBase",
                              "Component"
                            ]
                          }
                        }
                      }
                    },
                    "docs": "***string***: The name for the switch component to be used to control the valve for this part of the sprinkler system (often referred to as a \u201czone\u201d). When this switch is turned on, the controller\u2019s \u201cauto-advance\u201d feature is disabled and it will activate the associated valve for its `run_duration` multiplied by the controller\u2019s multiplier value. When this switch is turned off, the `sprinkler.shutdown` action is called (see below).\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
                  },
                  "valve_off_switch_id": {
                    "key": "Optional",
                    "use_id_type": "switch_::Switch",
                    "type": "use_id",
                    "docs": "**[Switch](https://esphome.io/components/switch/index.html#config-switch)**: This is the [switch](https://esphome.io/components/switch/index.html#config-switch) component to be used to *turn off* the *latching* valve that operates the given section or zone of the sprinkler system. Typically this would be a [GPIO switch](https://esphome.io/components/switch/gpio.html) wired to control a relay or other switching device which in turn would *switch off* the respective valve. *It is not recommended to expose this switch to the front end; please see* [An Important Note about GPIO Switches and Control](https://esphome.io/components/sprinkler.html#sprinkler-controller-an-important-note-about-gpio-switches-and-control) *below for more detail.* May not be specified with *valve_switch_id*.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
                  },
                  "valve_on_switch_id": {
                    "key": "Optional",
                    "use_id_type": "switch_::Switch",
                    "type": "use_id",
                    "docs": "**[Switch](https://esphome.io/components/switch/index.html#config-switch)**: This is the [switch](https://esphome.io/components/switch/index.html#config-switch) component to be used to *turn on* the *latching* valve that operates the given section or zone of the sprinkler system. Typically this would be a [GPIO switch](https://esphome.io/components/switch/gpio.html) wired to control a relay or other switching device which in turn would *switch on* the respective valve. *It is not recommended to expose this switch to the front end; please see* [An Important Note about GPIO Switches and Control](https://esphome.io/components/sprinkler.html#sprinkler-controller-an-important-note-about-gpio-switches-and-control) *below for more detail.* May not be specified with *valve_switch_id*.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
                  },
                  "valve_switch_id": {
                    "key": "Optional",
                    "use_id_type": "switch_::Switch",
                    "type": "use_id",
                    "docs": "**[Switch](https://esphome.io/components/switch/index.html#config-switch)**: This is the [switch](https://esphome.io/components/switch/index.html#config-switch) component to be used to control the valve that operates the given section or zone of the sprinkler system. Typically this would be a [GPIO switch](https://esphome.io/components/switch/gpio.html) wired to control a relay or other switching device which in turn would activate the respective valve. *It is not recommended to expose this switch to the front end; please see* [An Important Note about GPIO Switches and Control](https://esphome.io/components/sprinkler.html#sprinkler-controller-an-important-note-about-gpio-switches-and-control) *below for more detail.* May not be specified with *valve_off_switch_id* or *valve_on_switch_id*.\n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
                  }
                }
              },
              "docs": "***list***: A list of valves the controller should use. Each valve consists of:\n  * **enable_switch** (*Optional*, *string*): The name for the switch component to be used to enable this valve to be run as a part of a full cycle of the system. When this switch is turned off, the valve will be excluded from a full cycle of the system. When this switch is turned on or not provided, the controller will include the valve in a full cycle of the system.\n  \n  * **valve_switch** (**Required**, *string*): The name for the switch component to be used to control the valve for this part of the sprinkler system (often referred to as a \u201czone\u201d). When this switch is turned on, the controller\u2019s \u201cauto-advance\u201d feature is disabled and it will activate the associated valve for its `run_duration` multiplied by the controller\u2019s multiplier value. When this switch is turned off, the `sprinkler.shutdown` action is called (see below).\n  \n  * **pump_switch_id** (*Optional*, [Switch](https://esphome.io/components/switch/index.html#config-switch)): This is the [switch](https://esphome.io/components/switch/index.html#config-switch) component to be used to control the valve\u2019s pump or upstream electric valve. Typically this would be a [GPIO switch](https://esphome.io/components/switch/gpio.html) wired to control a relay or other switching device which in turn would activate the respective pump/valve. *It is not recommended to expose this switch to the front end; please see* [An Important Note about GPIO Switches and Control](https://esphome.io/components/sprinkler.html#sprinkler-controller-an-important-note-about-gpio-switches-and-control) *below for more detail.* May not be specified with *pump_off_switch_id* or *pump_on_switch_id*.\n  \n  * **pump_off_switch_id** (*Optional*, [Switch](https://esphome.io/components/switch/index.html#config-switch)): This is the [switch](https://esphome.io/components/switch/index.html#config-switch) component to be used to *turn off* the valve\u2019s pump or upstream electric *latching* valve. Typically this would be a [GPIO switch](https://esphome.io/components/switch/gpio.html) wired to control a relay or other switching device which in turn would *switch off* the respective pump/valve. *It is not recommended to expose this switch to the front end; please see* [An Important Note about GPIO Switches and Control](https://esphome.io/components/sprinkler.html#sprinkler-controller-an-important-note-about-gpio-switches-and-control) *below for more detail.* May not be specified with *pump_switch_id*.\n  \n  * **pump_on_switch_id** (*Optional*, [Switch](https://esphome.io/components/switch/index.html#config-switch)): This is the [switch](https://esphome.io/components/switch/index.html#config-switch) component to be used to *turn on* the valve\u2019s pump or upstream electric *latching* valve. Typically this would be a [GPIO switch](https://esphome.io/components/switch/gpio.html) wired to control a relay or other switching device which in turn would *switch on* the respective pump/valve. *It is not recommended to expose this switch to the front end; please see* [An Important Note about GPIO Switches and Control](https://esphome.io/components/sprinkler.html#sprinkler-controller-an-important-note-about-gpio-switches-and-control) *below for more detail.* May not be specified with *pump_switch_id*.\n  \n  * **run_duration_number** (*Optional*, *string*): The name of the [number](https://esphome.io/components/number/index.html) component that should be presented to the front end (Home Assistant) to enable control of the valve\u2019s `run_duration` value. May not be used with `run_duration`. See [Using the Sprinkler Controller\u2019s Numbers](https://esphome.io/components/sprinkler.html#sprinkler-controller-sprinkler-controller-numbers) below for more detail. **Pro tip:** Want times in minutes? Add `unit_of_measurement: min` to the number configuration. See [Using the Sprinkler Controller\u2019s Numbers](https://esphome.io/components/sprinkler.html#sprinkler-controller-sprinkler-controller-numbers) for more detail.\n  \n  * **run_duration** (*Optional*, [Time](https://esphome.io/guides/configuration-types.html#config-time)): Required when `run_duration_number` is not provided. The duration in seconds this valve should remain on/open after it is activated. When a given valve is activated, the controller\u2019s multiplier value is multiplied by this value to determine the actual run duration for the valve, thus allowing the run duration for all valves/zones to be proportionally increased or decreased as desired. May not be used with `run_duration_number`.\n  \n  * **valve_switch_id** (**Required**, [Switch](https://esphome.io/components/switch/index.html#config-switch)): This is the [switch](https://esphome.io/components/switch/index.html#config-switch) component to be used to control the valve that operates the given section or zone of the sprinkler system. Typically this would be a [GPIO switch](https://esphome.io/components/switch/gpio.html) wired to control a relay or other switching device which in turn would activate the respective valve. *It is not recommended to expose this switch to the front end; please see* [An Important Note about GPIO Switches and Control](https://esphome.io/components/sprinkler.html#sprinkler-controller-an-important-note-about-gpio-switches-and-control) *below for more detail.* May not be specified with *valve_off_switch_id* or *valve_on_switch_id*.\n  \n  * **valve_off_switch_id** (**Required**, [Switch](https://esphome.io/components/switch/index.html#config-switch)): This is the [switch](https://esphome.io/components/switch/index.html#config-switch) component to be used to *turn off* the *latching* valve that operates the given section or zone of the sprinkler system. Typically this would be a [GPIO switch](https://esphome.io/components/switch/gpio.html) wired to control a relay or other switching device which in turn would *switch off* the respective valve. *It is not recommended to expose this switch to the front end; please see* [An Important Note about GPIO Switches and Control](https://esphome.io/components/sprinkler.html#sprinkler-controller-an-important-note-about-gpio-switches-and-control) *below for more detail.* May not be specified with *valve_switch_id*.\n  \n  * **valve_on_switch_id** (**Required**, [Switch](https://esphome.io/components/switch/index.html#config-switch)): This is the [switch](https://esphome.io/components/switch/index.html#config-switch) component to be used to *turn on* the *latching* valve that operates the given section or zone of the sprinkler system. Typically this would be a [GPIO switch](https://esphome.io/components/switch/gpio.html) wired to control a relay or other switching device which in turn would *switch on* the respective valve. *It is not recommended to expose this switch to the front end; please see* [An Important Note about GPIO Switches and Control](https://esphome.io/components/sprinkler.html#sprinkler-controller-an-important-note-about-gpio-switches-and-control) *below for more detail.* May not be specified with *valve_switch_id*.\n  \n  \n\n*See also: [Sprinkler Controller](https://esphome.io/components/sprinkler.html#configuration-variables)*"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        }
      },
      "SPRINKLER_ACTION_SCHEMA": {
        "type": "schema",
        "maybe": "id",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "use_id_type": "sprinkler::Sprinkler",
              "type": "use_id"
            }
          }
        }
      }
    },
    "action": {
      "set_divider": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "sprinkler::Sprinkler",
              "type": "use_id"
            },
            "divider": {
              "key": "Required",
              "templatable": true,
              "type": "integer",
              "data_type": "positive_int"
            }
          }
        },
        "maybe": "divider"
      },
      "set_multiplier": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "sprinkler::Sprinkler",
              "type": "use_id"
            },
            "multiplier": {
              "key": "Required",
              "templatable": true,
              "data_type": "positive_float"
            }
          }
        },
        "maybe": "multiplier"
      },
      "queue_valve": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "use_id_type": "sprinkler::Sprinkler",
              "type": "use_id"
            },
            "run_duration": {
              "key": "Optional",
              "default": "0",
              "templatable": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_seconds"
                ]
              }
            },
            "valve_number": {
              "key": "Required",
              "templatable": true,
              "type": "integer",
              "data_type": "positive_int"
            }
          }
        }
      },
      "set_repeat": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "sprinkler::Sprinkler",
              "type": "use_id"
            },
            "repeat": {
              "key": "Required",
              "templatable": true,
              "type": "integer",
              "data_type": "positive_int"
            }
          }
        },
        "maybe": "repeat"
      },
      "set_valve_run_duration": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "use_id_type": "sprinkler::Sprinkler",
              "type": "use_id"
            },
            "run_duration": {
              "key": "Required",
              "templatable": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_seconds"
                ]
              }
            },
            "valve_number": {
              "key": "Required",
              "templatable": true,
              "type": "integer",
              "data_type": "positive_int"
            }
          }
        }
      },
      "start_from_queue": {
        "type": "schema",
        "schema": {
          "extends": [
            "sprinkler.SPRINKLER_ACTION_SCHEMA"
          ]
        }
      },
      "start_full_cycle": {
        "type": "schema",
        "schema": {
          "extends": [
            "sprinkler.SPRINKLER_ACTION_SCHEMA"
          ]
        }
      },
      "start_single_valve": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "sprinkler::Sprinkler",
              "type": "use_id"
            },
            "run_duration": {
              "key": "Optional",
              "templatable": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_seconds"
                ]
              }
            },
            "valve_number": {
              "key": "Required",
              "templatable": true,
              "type": "integer",
              "data_type": "positive_int"
            }
          }
        },
        "maybe": "valve_number"
      },
      "shutdown": {
        "type": "schema",
        "schema": {
          "extends": [
            "sprinkler.SPRINKLER_ACTION_SCHEMA"
          ]
        }
      },
      "resume_or_start_full_cycle": {
        "type": "schema",
        "schema": {
          "extends": [
            "sprinkler.SPRINKLER_ACTION_SCHEMA"
          ]
        }
      },
      "resume": {
        "type": "schema",
        "schema": {
          "extends": [
            "sprinkler.SPRINKLER_ACTION_SCHEMA"
          ]
        }
      },
      "pause": {
        "type": "schema",
        "schema": {
          "extends": [
            "sprinkler.SPRINKLER_ACTION_SCHEMA"
          ]
        }
      },
      "previous_valve": {
        "type": "schema",
        "schema": {
          "extends": [
            "sprinkler.SPRINKLER_ACTION_SCHEMA"
          ]
        }
      },
      "next_valve": {
        "type": "schema",
        "schema": {
          "extends": [
            "sprinkler.SPRINKLER_ACTION_SCHEMA"
          ]
        }
      },
      "clear_queued_valves": {
        "type": "schema",
        "schema": {
          "extends": [
            "sprinkler.SPRINKLER_ACTION_SCHEMA"
          ]
        }
      }
    }
  }
}