{
  "animation": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "id_type": {
                "class": "animation::Animation",
                "parents": [
                  "image::Image"
                ]
              },
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID with which you will be able to reference the animation later in your display code.\n\n*See also: [Animation](https://esphome.io/components/display/index.html#configuration-variables)*"
            },
            "file": {
              "key": "Required",
              "docs": "**string**: The path (relative to where the .yaml file is) of the gif file.\n\n*See also: [Animation](https://esphome.io/components/display/index.html#configuration-variables)*"
            },
            "resize": {
              "key": "Optional",
              "docs": "**string**: If set, this will resize all the frames to fit inside the given dimensions `WIDTHxHEIGHT` and preserve the aspect ratio.\n\n*See also: [Animation](https://esphome.io/components/display/index.html#configuration-variables)*"
            },
            "type": {
              "key": "Optional",
              "default": "BINARY",
              "type": "enum",
              "values": {
                "BINARY": {
                  "docs": "Two colors, suitable for 1 color displays or 2 color image in color displays. Uses 1 bit per pixel, 8 pixels per byte."
                },
                "TRANSPARENT_BINARY": {
                  "docs": "One color, any pixel that is fully transparent will not be drawn, and any other pixel will be the on color. Uses 1 bit per pixel, 8 pixels per byte."
                },
                "GRAYSCALE": {
                  "docs": "Full scale grey. Uses 8 bits per pixel, 1 pixel per byte."
                },
                "RGB565": {
                  "docs": "Lossy RGB color stored. Uses 2 bytes per pixel."
                },
                "RGB24": {
                  "docs": "Full RGB color stored. Uses 3 bytes per pixel."
                },
                "RGBA": {
                  "docs": "Full RGB color stored. Uses 4 bytes per pixel. Any pixel with an alpha value < 127 will not be drawn."
                }
              },
              "docs": "Specifies how to encode each frame internally. Defaults to `BINARY`.\n  * `BINARY`: Two colors, suitable for 1 color displays or 2 color image in color displays. Uses 1 bit per pixel, 8 pixels per byte.\n  \n  * `TRANSPARENT_BINARY`: One color, any pixel that is fully transparent will not be drawn, and any other pixel will be the on color. Uses 1 bit per pixel, 8 pixels per byte.\n  \n  * `GRAYSCALE`: Full scale grey. Uses 8 bits per pixel, 1 pixel per byte.\n  \n  * `RGB565`: Lossy RGB color stored. Uses 2 bytes per pixel.\n  \n  * `RGB24`: Full RGB color stored. Uses 3 bytes per pixel.\n  \n  * `RGBA`: Full RGB color stored. Uses 4 bytes per pixel. Any pixel with an alpha value < 127 will not be drawn.\n  \n  \n\n*See also: [Animation](https://esphome.io/components/display/index.html#configuration-variables)*"
            },
            "use_transparency": {
              "key": "Optional",
              "type": "boolean",
              "docs": "If set the alpha channel of the input image will be taken into account, and pixels with alpha < 127 will not be drawn. For image types without explicit alpha channel, the color (0, 0, 1) (very dark blue) will be mapped to black, to be able to store transparency information within the image. Explicitly transparent types (`TRANSPARENT_BINARY` and `RGBA`) default to `True` and cannot be set to `False`; other types default to `False`.\n\n*See also: [Animation](https://esphome.io/components/display/index.html#configuration-variables)*"
            },
            "loop": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "start_frame": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer",
                    "data_type": "positive_int",
                    "docs": "**int**: The frame to loop back to when `end_frame` is reached. Defaults to the first frame in the animation.\n\n*See also: [Animation](https://esphome.io/components/display/index.html#configuration-variables)*"
                  },
                  "end_frame": {
                    "key": "Optional",
                    "type": "integer",
                    "data_type": "positive_int",
                    "docs": "**int**: The last frame to show in the loop; when this frame is reached it will loop back to `start_frame`. Defaults to the last frame in the animation.\n\n*See also: [Animation](https://esphome.io/components/display/index.html#configuration-variables)*"
                  },
                  "repeat": {
                    "key": "Optional",
                    "type": "integer",
                    "data_type": "positive_int",
                    "docs": "**int**: Specifies how many times the loop will run. When the count is reached, the animation will continue with the next frame after `end_frame`, or restart from the beginning if `end_frame` was the last frame. Defaults to \u201cloop forever\u201d.\n\n*See also: [Animation](https://esphome.io/components/display/index.html#configuration-variables)*"
                  }
                }
              },
              "docs": "If you want to loop over a subset of your animation (e.g. a fire animation where the fire \u201cstarts\u201d, then \u201cburns\u201d and \u201cdies\u201d) you can specify some frames to loop over.\n  * **start_frame** (*Optional*, int): The frame to loop back to when `end_frame` is reached. Defaults to the first frame in the animation.\n  \n  * **end_frame** (*Optional*, int): The last frame to show in the loop; when this frame is reached it will loop back to `start_frame`. Defaults to the last frame in the animation.\n  \n  * **repeat** (*Optional*, int): Specifies how many times the loop will run. When the count is reached, the animation will continue with the next frame after `end_frame`, or restart from the beginning if `end_frame` was the last frame. Defaults to \u201cloop forever\u201d.\n  \n  \n\n*See also: [Animation](https://esphome.io/components/display/index.html#configuration-variables)*"
            },
            "raw_data_id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "uint8_t",
                "parents": null
              }
            }
          }
        },
        "is_list": true
      }
    },
    "action": {
      "set_frame": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "animation::Animation",
              "type": "use_id"
            },
            "frame": {
              "key": "Required",
              "type": "integer",
              "data_type": "uint16_t"
            }
          }
        }
      },
      "prev_frame": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "animation::Animation",
              "type": "use_id"
            }
          }
        },
        "maybe": "id"
      },
      "next_frame": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "animation::Animation",
              "type": "use_id"
            }
          }
        },
        "maybe": "id"
      }
    }
  }
}