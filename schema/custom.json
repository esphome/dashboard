{
  "custom.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "custom::CustomSensorConstructor",
                "parents": []
              }
            },
            "lambda": {
              "key": "Required",
              "docs": "**[lambda](https://esphome.io/guides/automations.html#config-lambda)**: The lambda to run for instantiating the sensor(s).\n\n*See also: [Custom Sensor Component](https://esphome.io/components/sensor/custom.html#configuration-variables)*"
            },
            "sensors": {
              "key": "Required",
              "is_list": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ]
              },
              "docs": "**list**: A list of sensors to initialize. The length here must equal the number of items in the `return` statement of the `lambda`.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [Custom Sensor Component](https://esphome.io/components/sensor/custom.html#configuration-variables)*"
            }
          }
        }
      }
    }
  },
  "custom.binary_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "custom::CustomBinarySensorConstructor",
                "parents": []
              }
            },
            "lambda": {
              "key": "Required",
              "docs": "**[lambda](https://esphome.io/guides/automations.html#config-lambda)**: The lambda to run for instantiating the binary sensor(s).\n\n*See also: [Custom Binary Sensor](https://esphome.io/components/binary_sensor/custom.html#custom-binary-sensor)*"
            },
            "binary_sensors": {
              "key": "Required",
              "is_list": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "binary_sensor.BINARY_SENSOR_SCHEMA"
                ]
              },
              "docs": "**list**: A list of binary sensors to initialize. The length here must equal the number of items in the `return` statement of the `lambda`.\n  * All options from [Binary Sensor](https://esphome.io/components/binary_sensor/index.html#config-binary-sensor).\n  \n  \n\n*See also: [Custom Binary Sensor](https://esphome.io/components/binary_sensor/custom.html#custom-binary-sensor)*"
            }
          }
        }
      }
    }
  },
  "custom.climate": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "custom::CustomClimateConstructor",
                "parents": []
              }
            },
            "lambda": {
              "key": "Required",
              "docs": "**[lambda](https://esphome.io/guides/automations.html#config-lambda)**: The lambda to run for instantiating the climate(s).\n\n*See also: [Custom Climate](https://esphome.io/components/climate/custom.html#custom-climate)*"
            },
            "climates": {
              "key": "Required",
              "is_list": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "climate.CLIMATE_SCHEMA"
                ]
              },
              "docs": "**list**: A list of climates to initialize. The length here must equal the number of items in the `return` statement of the `lambda`.\n  * All options from [Climate](https://esphome.io/components/climate/index.html#config-climate).\n  \n  \n\n*See also: [Custom Climate](https://esphome.io/components/climate/custom.html#custom-climate)*"
            }
          }
        }
      }
    }
  },
  "custom.cover": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "custom::CustomCoverConstructor",
                "parents": []
              }
            },
            "lambda": {
              "key": "Required",
              "docs": "**[lambda](https://esphome.io/guides/automations.html#config-lambda)**: The lambda to run for instantiating the cover(s).\n\n*See also: [Custom Cover](https://esphome.io/components/cover/custom.html#custom-cover)*"
            },
            "covers": {
              "key": "Required",
              "is_list": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "cover.COVER_SCHEMA"
                ]
              },
              "docs": "**list**: A list of covers to initialize. The length here must equal the number of items in the `return` statement of the `lambda`.\n  * All options from [Cover](https://esphome.io/components/cover/index.html#config-cover).\n  \n  \n\n*See also: [Custom Cover](https://esphome.io/components/cover/custom.html#custom-cover)*"
            }
          }
        }
      }
    }
  },
  "custom.light": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "custom::CustomLightOutputConstructor",
                "parents": []
              }
            },
            "lambda": {
              "key": "Required",
              "docs": "**[lambda](https://esphome.io/guides/automations.html#config-lambda)**: The lambda to run for instantiating the light output(s).\n\n*See also: [Custom Light Output](https://esphome.io/components/light/custom.html#custom-light-output)*"
            },
            "lights": {
              "key": "Required",
              "is_list": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "light.ADDRESSABLE_LIGHT_SCHEMA"
                ]
              },
              "docs": "**list**: A list of lights to initialize. The length here must equal the number of items in the `return` statement of the `lambda`.\n  * All options from [Light](https://esphome.io/components/light/index.html#config-light).\n  \n  \n\n*See also: [Custom Light Output](https://esphome.io/components/light/custom.html#custom-light-output)*"
            }
          }
        }
      }
    }
  },
  "custom.output": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "typed",
        "types": {
          "binary": {
            "config_vars": {
              "id": {
                "key": "GeneratedID",
                "id_type": {
                  "class": "custom::CustomBinaryOutputConstructor",
                  "parents": []
                }
              },
              "lambda": {
                "key": "Required",
                "docs": "**[lambda](https://esphome.io/guides/automations.html#config-lambda)**: The lambda to run for instantiating the output(s).\n\n*See also: [Custom Output](https://esphome.io/components/output/custom.html#custom-output)*"
              },
              "outputs": {
                "key": "Required",
                "is_list": true,
                "type": "schema",
                "schema": {
                  "extends": [
                    "output.BINARY_OUTPUT_SCHEMA"
                  ],
                  "config_vars": {
                    "id": {
                      "key": "GeneratedID",
                      "id_type": {
                        "class": "output::BinaryOutput",
                        "parents": []
                      }
                    }
                  }
                },
                "docs": "**list**: A list of outputs to initialize. The length here must equal the number of items in the `return` statement of the `lambda`.\n  * All options from [Output](https://esphome.io/components/output/index.html#config-output).\n  \n  \n\n*See also: [Custom Output](https://esphome.io/components/output/custom.html#custom-output)*"
              }
            }
          },
          "float": {
            "config_vars": {
              "id": {
                "key": "GeneratedID",
                "id_type": {
                  "class": "custom::CustomFloatOutputConstructor",
                  "parents": []
                }
              },
              "lambda": {
                "key": "Required",
                "docs": "**[lambda](https://esphome.io/guides/automations.html#config-lambda)**: The lambda to run for instantiating the output(s).\n\n*See also: [Custom Output](https://esphome.io/components/output/custom.html#custom-output)*"
              },
              "outputs": {
                "key": "Required",
                "is_list": true,
                "type": "schema",
                "schema": {
                  "extends": [
                    "output.FLOAT_OUTPUT_SCHEMA"
                  ],
                  "config_vars": {
                    "id": {
                      "key": "GeneratedID",
                      "id_type": {
                        "class": "output::FloatOutput",
                        "parents": [
                          "output::BinaryOutput"
                        ]
                      }
                    }
                  }
                },
                "docs": "**list**: A list of outputs to initialize. The length here must equal the number of items in the `return` statement of the `lambda`.\n  * All options from [Output](https://esphome.io/components/output/index.html#config-output).\n  \n  \n\n*See also: [Custom Output](https://esphome.io/components/output/custom.html#custom-output)*"
              }
            }
          }
        },
        "typed_key": "type",
        "docs": "**string**: The type of output. One of `binary` and `float`.\n\n*See also: [Custom Output](https://esphome.io/components/output/custom.html#custom-output)*"
      }
    }
  },
  "custom.switch": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "custom::CustomSwitchConstructor",
                "parents": []
              }
            },
            "lambda": {
              "key": "Required",
              "docs": "**[lambda](https://esphome.io/guides/automations.html#config-lambda)**: The lambda to run for instantiating the switch(es).\n\n*See also: [Custom Switch](https://esphome.io/components/switch/custom.html#custom-switch)*"
            },
            "switches": {
              "key": "Required",
              "is_list": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "switch.SWITCH_SCHEMA"
                ],
                "config_vars": {
                  "id": {
                    "key": "GeneratedID",
                    "id_type": {
                      "class": "switch_::Switch",
                      "parents": [
                        "EntityBase"
                      ]
                    }
                  }
                }
              },
              "docs": "**list**: A list of switches to initialize. The length here must equal the number of items in the `return` statement of the `lambda`.\n  * All options from [Switch](https://esphome.io/components/switch/index.html#config-switch).\n  \n  \n\n*See also: [Custom Switch](https://esphome.io/components/switch/custom.html#custom-switch)*"
            }
          }
        }
      }
    }
  },
  "custom.text_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "custom::CustomTextSensorConstructor",
                "parents": []
              }
            },
            "lambda": {
              "key": "Required",
              "docs": "**[lambda](https://esphome.io/guides/automations.html#config-lambda)**: The lambda to run for instantiating the text sensor(s).\n\n*See also: [Custom Text Sensor](https://esphome.io/components/text_sensor/custom.html#custom-text-sensor)*"
            },
            "text_sensors": {
              "key": "Required",
              "is_list": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "text_sensor.TEXT_SENSOR_SCHEMA"
                ]
              },
              "docs": "**list**: A list of text sensors to initialize. The length here must equal the number of items in the `return` statement of the `lambda`.\n  * All options from [Text Sensor](https://esphome.io/components/text_sensor/index.html#config-text-sensor).\n  \n  \n\n*See also: [Custom Text Sensor](https://esphome.io/components/text_sensor/custom.html#custom-text-sensor)*"
            }
          }
        }
      }
    }
  }
}